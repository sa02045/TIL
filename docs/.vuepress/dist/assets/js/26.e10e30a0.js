(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{385:function(_,v,a){"use strict";a.r(v);var t=a(44),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"성능-분석가의-관심사-goal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#성능-분석가의-관심사-goal"}},[_._v("#")]),_._v(" 성능 분석가의 관심사 (GOAL)")]),_._v(" "),a("p",[_._v("첫 번째, 서버 성능분석의 관심사는?\n| 서버가 얼마나 빠른가, 얼마나 많은 요청을 처리하는가?\nTPS가 중요(Transition Per Seconds)")]),_._v(" "),a("p",[_._v("두 번째, FE 성능분석의 관심사는?\n| 사용자의 입력에 따라 얼마나 빠르게 반응하는가?\nLAL이 중요(Loading and Interaction)")]),_._v(" "),a("h2",{attrs:{id:"lal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lal"}},[_._v("#")]),_._v(" LAL")]),_._v(" "),a("ol",[a("li",[_._v("초기 로딩 속도\n"),a("ul",[a("li",[_._v("얼마나 빨리 페이지를 볼 수 있는가")])])]),_._v(" "),a("li",[_._v("인터렉션 속도\n"),a("ul",[a("li",[_._v("스크롤이 버벅거리는가")]),_._v(" "),a("li",[_._v("키보드 입력이 버벅거리는가")]),_._v(" "),a("li",[_._v("애니메이션이 매끄럽게 동작하는가")])])])]),_._v(" "),a("h1",{attrs:{id:"성능분석의-대상"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#성능분석의-대상"}},[_._v("#")]),_._v(" 성능분석의 대상")]),_._v(" "),a("p",[_._v("| 숲을 보자")]),_._v(" "),a("ul",[a("li",[_._v("서비스에서 가장 많이 사용하는 화면은?")]),_._v(" "),a("li",[_._v("서비스에서 사용자에게 가장 가치있는 화면은?")])]),_._v(" "),a("h1",{attrs:{id:"개선-프로세스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#개선-프로세스"}},[_._v("#")]),_._v(" 개선 프로세스")]),_._v(" "),a("ol",[a("li",[_._v("측정")]),_._v(" "),a("li",[_._v("분석")]),_._v(" "),a("li",[_._v("최적화")])]),_._v(" "),a("p",[_._v("측정 -> 분석 -> 최적화 -> 측정 -> 분석.... 의 반복")]),_._v(" "),a("p",[_._v("언제까지? -> 도달할 때 까지")]),_._v(" "),a("p",[_._v("네이버는")]),_._v(" "),a("ul",[a("li",[_._v("모바일 1.5초")]),_._v(" "),a("li",[_._v("PC 2초를 초기 페이지 로딩속도로 목표")])]),_._v(" "),a("h1",{attrs:{id:"성능-개선-시작하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#성능-개선-시작하기"}},[_._v("#")]),_._v(" 성능 개선 시작하기")]),_._v(" "),a("h2",{attrs:{id:"첫-번째-로딩-속도-측정-분석하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#첫-번째-로딩-속도-측정-분석하기"}},[_._v("#")]),_._v(" 첫 번째, 로딩 속도 측정, 분석하기")]),_._v(" "),a("p",[_._v("| 핵심은 Waterfall 차트를 개선하는 것")]),_._v(" "),a("ul",[a("li",[_._v("높이를 줄이고")]),_._v(" "),a("li",[_._v("폭을 줄이고")]),_._v(" "),a("li",[_._v("간격을 땡기고")]),_._v(" "),a("li",[_._v("최종 점검하기")])]),_._v(" "),a("h1",{attrs:{id:"높이-줄이기-요청-수를-줄이기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#높이-줄이기-요청-수를-줄이기"}},[_._v("#")]),_._v(" 높이 줄이기 (요청 수를 줄이기)")]),_._v(" "),a("ol",[a("li",[_._v("JS, CSS Merge (Webpack)")]),_._v(" "),a("li",[_._v("CSS Sprite (재활용)")]),_._v(" "),a("li",[_._v("Data URI\n"),a("ul",[a("li",[_._v("캐싱되지 않아도 될 이미지를 HTML 요청에 포함시키기")])])])]),_._v(" "),a("h2",{attrs:{id:"효과적인-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#효과적인-방법"}},[_._v("#")]),_._v(" 효과적인 방법")]),_._v(" "),a("p",[_._v("| 초기 로딩 시 불필요한 자원을 삭제하거나 Lazy하게 요청하기")]),_._v(" "),a("ul",[a("li",[_._v("실수로 요청한 자원")]),_._v(" "),a("li",[_._v("초기 로딩시 필요 없는 JS")]),_._v(" "),a("li",[_._v("뷰 포트 바깥에 있는 이미지등(슬라이더,carousel등)")])]),_._v(" "),a("h3",{attrs:{id:"뭐니뭐니해도-이미지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#뭐니뭐니해도-이미지"}},[_._v("#")]),_._v(" 뭐니뭐니해도 이미지")]),_._v(" "),a("p",[_._v("| 가장 많은 사이즈를 잡아 먹음")]),_._v(" "),a("ul",[a("li",[_._v("해결책은 Lazy 하게 이미지를 불러오는 것")])]),_._v(" "),a("h3",{attrs:{id:"그외"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#그외"}},[_._v("#")]),_._v(" 그외")]),_._v(" "),a("ul",[a("li",[_._v("브라우저는 호스트마다 동시에 연결할 수 있는 개수가 정해져 있음")]),_._v(" "),a("li",[_._v("요청 수가 많으면 사용할 수 있는 connection 수를 초과하여 다른 요청은 브라우저에서 대기하게 됨")]),_._v(" "),a("li",[_._v("결국 , 요청은 적으면 적을 수록 좋다")])]),_._v(" "),a("h1",{attrs:{id:"폭-줄이기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#폭-줄이기"}},[_._v("#")]),_._v(" 폭 줄이기")]),_._v(" "),a("p",[_._v("| 많은 정보를 담고 있는 reqeust")]),_._v(" "),a("h2",{attrs:{id:"_1-initial-connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-initial-connection"}},[_._v("#")]),_._v(" 1. Initial Connection")]),_._v(" "),a("ol",[a("li",[_._v("HTTP 프로토콜 마다 Connection 활용 방법이 다르다")]),_._v(" "),a("li",[_._v("이 부분을 개선시키고 싶다면 HTTP2가 정답. 즉, 커넥션에 대한 튜닝은 프로토콜을 바꾸는 방법 밖에 없음")])]),_._v(" "),a("h2",{attrs:{id:"_2-time-to-first-byte-ttfb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-time-to-first-byte-ttfb"}},[_._v("#")]),_._v(" 2. Time to First Byte(TTFB)")]),_._v(" "),a("p",[_._v("TTFB가 오래 걸린다는 뜻은, 서버 비지니스 로직이 느리다는 의미(서버가 느리다!)")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("Content Download 문제면")]),_._v(" "),a("ol",[a("li",[_._v("네트워크 속도가 늦다")]),_._v(" "),a("li",[_._v("Content Size가 크다")])])]),_._v(" "),a("li",[a("p",[_._v("해결책은")]),_._v(" "),a("ol",[a("li",[_._v("JS, CSS를 Minify한다\n"),a("ul",[a("li",[_._v("주석제거, 공백제거")]),_._v(" "),a("li",[_._v("변수명 변경하기")])])]),_._v(" "),a("li",[_._v("gzip 적용하기")]),_._v(" "),a("li",[_._v("이미지는 포맷에 따라 성능이 차이남(png,jpg 등등...)")]),_._v(" "),a("li",[_._v("이미지의 메타정보(찍은 날짜등등)을 제거해서 최적화를 하는것이 좋음")])])])]),_._v(" "),a("h2",{attrs:{id:"decode-비용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decode-비용"}},[_._v("#")]),_._v(" Decode 비용")]),_._v(" "),a("p",[_._v("| 이미지 데이터를 RGB로 변환하는 과정")]),_._v(" "),a("p",[_._v("Request -> Decode -> Copy to GPU -> Display")]),_._v(" "),a("h1",{attrs:{id:"_3-간격땡기기-request-계단-간격을-땡겨보자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-간격땡기기-request-계단-간격을-땡겨보자"}},[_._v("#")]),_._v(" 3. 간격땡기기 : Request 계단 간격을 땡겨보자")]),_._v(" "),a("h2",{attrs:{id:"브라우저-렌더링-과정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#브라우저-렌더링-과정"}},[_._v("#")]),_._v(" 브라우저 렌더링 과정")]),_._v(" "),a("ol",[a("li",[_._v("서버로부터 HTML 문자열을 Stream으로 받아와서")]),_._v(" "),a("li",[a("code",[_._v("<head>")]),_._v(" 태그에 포함된 자원을 "),a("code",[_._v("병렬")]),_._v("로 다운로드")]),_._v(" "),a("li",[a("code",[_._v("<head>")]),_._v(" 태그에 포함된 자원을 모두 실행함(그전까지는 브라우저는 흰 화면)")]),_._v(" "),a("li",[a("code",[_._v("<body>")]),_._v(" 태그로부터 화면을 그리기 시작한다")]),_._v(" "),a("li",[_._v("DOM 구성이 완료되면 "),a("code",[_._v("DOMContentLoaded")]),_._v(" 이벤트가 발생함")]),_._v(" "),a("li",[_._v("모든 자원의 로딩이 완료되면 load이벤트가 발생함")])]),_._v(" "),a("h3",{attrs:{id:"그런데-여기서-js는-dom-cssom을-건드리를-수-있는-구조"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#그런데-여기서-js는-dom-cssom을-건드리를-수-있는-구조"}},[_._v("#")]),_._v(" 그런데 여기서 JS는 DOM, CSSOM을 건드리를 수 있는 구조")]),_._v(" "),a("p",[_._v("| Render과정을 다시 거쳐야함")]),_._v(" "),a("h2",{attrs:{id:"정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[_._v("#")]),_._v(" 정리")]),_._v(" "),a("ol",[a("li",[_._v("Head태그에는 CSS와 필수 JS만 넣어라\n"),a("ul",[a("li",[_._v("모두 다운로드, 실행되기 전에는 브라우저는 아무것도 그리지 않는다.")]),_._v(" "),a("li",[_._v("body 태그 마지막에 JS를 넣어라\n"),a("ul",[a("li",[_._v("중간중간에 JS를 넣지마라")]),_._v(" "),a("li",[_._v("왜냐하면 렌더링 블락이 생기기 때문이다")]),_._v(" "),a("li",[_._v("HTML파서가 파싱을 하면서 JS를 만나면 실행하기 때문")])])])])])]),_._v(" "),a("h3",{attrs:{id:"async-defer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-defer"}},[_._v("#")]),_._v(" async, defer")]),_._v(" "),a("ul",[a("li",[_._v("DOM제어와 관련이 있는 스크립트와 defer를 사용")]),_._v(" "),a("li",[_._v("의존성이 없는 스크립트는 async를 사용")])]),_._v(" "),a("h3",{attrs:{id:"css파일에서-폰트-이미지를-사용하는-경우"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css파일에서-폰트-이미지를-사용하는-경우"}},[_._v("#")]),_._v(" CSS파일에서 폰트, 이미지를 사용하는 경우")]),_._v(" "),a("ul",[a("li",[_._v("CSS가 불러와진 다음에 CSS에서 사용하는 폰트 이미지가 로딩됨")]),_._v(" "),a("li",[_._v("해결책 -> "),a("code",[_._v("preload")]),_._v(" : 미리 자원을 부를 수 있음")]),_._v(" "),a("li",[_._v("또는 HTTP2 Server push : HTML과 함께 JS,CSS,이미지가 로딩됨")])]),_._v(" "),a("h3",{attrs:{id:"체감속도-높이기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#체감속도-높이기"}},[_._v("#")]),_._v(" 체감속도 높이기")]),_._v(" "),a("ol",[a("li",[_._v("First Paint: Head 태그 종료 후 그려짐")]),_._v(" "),a("li",[_._v("First Meaningful Paint: Hero 엘리먼트가 보이는 시기")])]),_._v(" "),a("p",[_._v("위 두가지를 높이게 노력하면 체감속도가 높아짐")]),_._v(" "),a("p",[_._v("서비스 차원에서는")]),_._v(" "),a("ul",[a("li",[_._v("Hero 엘리먼트")]),_._v(" "),a("li",[_._v("Lazy하게 처리해야하는 요소를 결정해야 함")])]),_._v(" "),a("p",[_._v("또는\nRequest의 균형감을 찾아야함")]),_._v(" "),a("ul",[a("li",[_._v("각각의 Request를 균등한 크기로 맞추기")])]),_._v(" "),a("h1",{attrs:{id:"인터렉션"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인터렉션"}},[_._v("#")]),_._v(" 인터렉션")]),_._v(" "),a("p",[_._v("| 상황에 따라 최적화 방법이 다르다\n하지만 하나의 원리로 귀결")]),_._v(" "),a("blockquote",[a("p",[_._v("브라우저 Main Thread는 건드리지 않기!")])]),_._v(" "),a("h2",{attrs:{id:"문제는-동적언어-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#문제는-동적언어-js"}},[_._v("#")]),_._v(" 문제는 동적언어 JS")]),_._v(" "),a("p",[_._v("| 자바스크립트가 DOM을 건드리면 기본적을 Main Thread에 의해서 Rendering Pipeline이 동작하게됨")]),_._v(" "),a("h3",{attrs:{id:"rendering-pipeline이해하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rendering-pipeline이해하기"}},[_._v("#")]),_._v(" Rendering Pipeline이해하기")]),_._v(" "),a("p",[_._v("JS로 DOM을 변경하면")]),_._v(" "),a("ol",[a("li",[_._v("Style Recalculate : DOM의 최종 스타일을 계산")]),_._v(" "),a("li",[_._v("Layout : DOM의 배치와 크기를 계산함")]),_._v(" "),a("li",[_._v("Paint : 화면에 그림")]),_._v(" "),a("li",[_._v("Composition: 레이어를 조합")])]),_._v(" "),a("p",[_._v("해결책 -> 최대한 덜 그리고, 적게 그리도록 만들어야함")]),_._v(" "),a("h4",{attrs:{id:"해결책"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#해결책"}},[_._v("#")]),_._v(" 해결책")]),_._v(" "),a("ol",[a("li",[_._v("Layout이 발생하는 속성 건드리지 않기")]),_._v(" "),a("li",[_._v("도와줘 GPU\n"),a("ul",[a("li",[_._v("Main Thread(CPU)가 아닌 GPU의 도움을 받기")])])])]),_._v(" "),a("h4",{attrs:{id:"gpu의-도움을-받기위해서-레이어를-만들기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpu의-도움을-받기위해서-레이어를-만들기"}},[_._v("#")]),_._v(" GPU의 도움을 받기위해서 레이어를 만들기")]),_._v(" "),a("ul",[a("li",[_._v("브라우저가 규칙에 따라 레이어를 구성함")]),_._v(" "),a("li",[_._v("명시적으로 레이어를 구성하기")])]),_._v(" "),a("h4",{attrs:{id:"gpu의-side-effect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpu의-side-effect"}},[_._v("#")]),_._v(" GPU의 Side Effect")]),_._v(" "),a("ul",[a("li",[_._v("레이어를 구성하는 작업은 초기에는 CPU가 진행")]),_._v(" "),a("li",[_._v("레이어에 원래 비트맵 정보를 복사하기 위해 2배의 메모리가 필요함\n| 해결책 -> 꼭 필요한 부분만 레이어로 만든다")])]),_._v(" "),a("h4",{attrs:{id:"_60fps-보장하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_60fps-보장하기"}},[_._v("#")]),_._v(" 60FPS 보장하기")]),_._v(" "),a("ul",[a("li",[_._v("렌더링 파이프가 계속해서 발생하는 경우 1Frame은 16ms내에 완료되어야함")]),_._v(" "),a("li",[_._v("애니메이션에서는 requestAnimationFrame API으로 16ms 주기를 완료")])]),_._v(" "),a("h4",{attrs:{id:"dom을-건드리지-않는-js코드-실행시간도-동일"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom을-건드리지-않는-js코드-실행시간도-동일"}},[_._v("#")]),_._v(" DOM을 건드리지 않는 JS코드 실행시간도 동일")]),_._v(" "),a("ul",[a("li",[_._v("서비스 Biz 로직이 대다수...")]),_._v(" "),a("li",[_._v("서비스 개발자가 가장 잘 고칠 수 있음")])])])}),[],!1,null,null,null);v.default=e.exports}}]);