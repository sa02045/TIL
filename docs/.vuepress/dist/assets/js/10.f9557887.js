(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"알고리즘-문제해결전략-책-정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#알고리즘-문제해결전략-책-정리"}},[t._v("#")]),t._v(" 알고리즘 문제해결전략 책 정리")]),t._v(" "),a("h2",{attrs:{id:"최단경로문제"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#최단경로문제"}},[t._v("#")]),t._v(" 최단경로문제")]),t._v(" "),a("blockquote",[a("p",[t._v("그래프에서 주어진 두 정점을 연결하는 가장 짧은 경로의 길이를 찾는 문제 (가중치가 있는)")])]),t._v(" "),a("ul",[a("li",[t._v("최단 경로를 구성하는 정점의 목록을 구해주는 것이 아니라 최단 경로의 길이만을 찾아준다")]),t._v(" "),a("li",[t._v("경로를 구하기 위해서는 별도의 정보를 저장하고 찾는 코드를 작성해야한다")])]),t._v(" "),a("h2",{attrs:{id:"음수간선의-중요성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#음수간선의-중요성"}},[t._v("#")]),t._v(" 음수간선의 중요성")]),t._v(" "),a("blockquote",[a("p",[t._v("최단경로 문제를 해결하기 위해 가장 먼저 유의해야할 점은 음수간선의 여부 : 사이클이 만들어질 수 있음")])]),t._v(" "),a("h2",{attrs:{id:"단일-시작점과-모든-쌍-알고리즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#단일-시작점과-모든-쌍-알고리즘"}},[t._v("#")]),t._v(" 단일 시작점과 모든 쌍 알고리즘")]),t._v(" "),a("blockquote",[a("p",[t._v("단일 시작점 알고리즘 : 하나의 시작점에서 다른 모든 정점까지의 최단거리를 계산")])]),t._v(" "),a("ul",[a("li",[t._v("수행 결과는 V X V 크기의 배열")])]),t._v(" "),a("h2",{attrs:{id:"모든-쌍-최단-거리-알고리즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#모든-쌍-최단-거리-알고리즘"}},[t._v("#")]),t._v(" 모든 쌍 최단 거리 알고리즘")]),t._v(" "),a("blockquote",[a("p",[t._v("플로이드 알고리즘을 공부")])]),t._v(" "),a("h2",{attrs:{id:"방향-그래프와-무방향-그래프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#방향-그래프와-무방향-그래프"}},[t._v("#")]),t._v(" 방향 그래프와 무방향 그래프")]),t._v(" "),a("blockquote",[a("p",[t._v("무방향 그래프 위에서는 양방향 간선을 일반 통행 간선으로 쪼개어 방향 그래프로 변환해야함\n무방향 음수 간선 그래프는 당연히 사이클을 만들기 때문에 최단경로 문제를 풀 수 없음")])]),t._v(" "),a("h1",{attrs:{id:"다익스트라-알고리즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#다익스트라-알고리즘"}},[t._v("#")]),t._v(" 다익스트라 알고리즘")]),t._v(" "),a("blockquote",[a("p",[t._v("단일 시작점 최단경로 알고리즘. 시작 정점 s에서 다른 정점들까지의 최단 거리")])]),t._v(" "),a("h2",{attrs:{id:"우선순위-큐를-사용하는-너비-우선-탐색"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#우선순위-큐를-사용하는-너비-우선-탐색"}},[t._v("#")]),t._v(" 우선순위 큐를 사용하는 너비 우선 탐색")]),t._v(" "),a("blockquote",[a("p",[t._v("너비 우선 탐색 만으로는 최단경로를 찾을 수 없음 -> 우선순위 큐를 사용해서 해결")])]),t._v(" "),a("ol",[a("li",[t._v("우선순위 큐에 정점의 번호와 함께 지금까지 찾아낸 해당 정점까지의 최단거리를 쌍으로 넣음")]),t._v(" "),a("li",[t._v("우선순위 큐는 정점까지의 최단거리를 기준으로 정렬, 아직 방문하지 않는 정점 중 시작점으로부터 거리가 가장 가까운 점을 찾는 과정")]),t._v(" "),a("li",[t._v("각 정점 까지의 최단거리를 저장하는 배열 dist[]를 유지 , 정점을 방문할 때마다 인접 정점을 모두 검사")]),t._v(" "),a("li",[t._v("간선 (u,v)를 검사하고, v가 아직 방문하지 않는 정점이라면, u까지의 최단 거리에 (u,v)의 가중치를 더해 v까지의 경로길이를 찾는다.")]),t._v(" "),a("li",[t._v("이것이 지금까지 찾은 최단거리라면 dist[v]를 갱신하고 (dist[v],v)를 큐에 넣는다")])]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" V"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//정점의 갯수")]),t._v("\n\nvector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" adj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAX_V"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 그래프의 인접리스트 <정점번호,가중치>")]),t._v("\n\nvector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dijkstra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("V"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("INF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dist 배열 V길이만큼 INF로")]),t._v("\n\n    dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//시작 V의 dist=0")]),t._v("\n\n    priority_queue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_pair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 가중치,정점번호")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지금꺼낸 최단경로 길이")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" here "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 정점번호")]),t._v("\n\n        pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지금꺼낸 최단경로길이보다 최단경로길이가 있다면 무시")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("adj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" there "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nextDist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" adj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 더 짧은 경로를 발견하면 =")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("there"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nextDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                pq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_pair")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nextDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("there"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"priority-queue는-가장-큰-원소가-위로가도록"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priority-queue는-가장-큰-원소가-위로가도록"}},[t._v("#")]),t._v(" priority_queue는 가장 큰 원소가 위로가도록")]),t._v(" "),a("blockquote",[a("p",[t._v("거리가 작은 정점부터 꺼내도록 해야한다")])])])}),[],!1,null,null,null);s.default=r.exports}}]);