(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{422:function(t,r,s){"use strict";s.r(r);var e=s(44),a=Object(e.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"grpc-docker-kubernetes-and-serverlet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grpc-docker-kubernetes-and-serverlet"}},[t._v("#")]),t._v(" gRPC, Docker, Kubernetes and Serverlet")]),t._v(" "),s("ul",[s("li",[t._v("변재현 (당근마켓 개발자)")])]),t._v(" "),s("p",[t._v("특강 포인트")]),t._v(" "),s("ul",[s("li",[t._v("지대넓얕")]),t._v(" "),s("li",[t._v("이런 기술도 있다! 기술이 왜 나왔는지 보자!")])]),t._v(" "),s("p",[t._v("개요")]),t._v(" "),s("ul",[s("li",[t._v("Monolithic에서 Miscroservice Architecture의 도입 과정")]),t._v(" "),s("li",[t._v("서비스 간 통신을 위한 HTTP와 gRPC")]),t._v(" "),s("li",[t._v("VM기반 Infra provisiontion Container로의 변화")]),t._v(" "),s("li",[t._v("Container 환경을 운영하기 위한 Kubernetess의 도입")]),t._v(" "),s("li",[t._v("인프라 운영에서 벗어난 Serverless의 도입\n"),s("ul",[s("li",[t._v("AI 엔지니어도 인프라에 대한 이해가 필수, 데이터를 핸들링하는 스킬이 필요함")])])])]),t._v(" "),s("ol",[s("li",[t._v("아키텍처의 변화")])]),t._v(" "),s("p",[t._v("Monolithic -> MS Architecture")]),t._v(" "),s("h2",{attrs:{id:"monolithic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monolithic"}},[t._v("#")]),t._v(" Monolithic")]),t._v(" "),s("ul",[s("li",[t._v("서버하나가 모든 로직을 담당\n"),s("ul",[s("li",[t._v("DB, UI, Backend등의 소스가 하나에 몰빵")])])]),t._v(" "),s("li",[t._v("문제점 : 하나의 기능이 고장이나면 서버 전체가 고장이남")])]),t._v(" "),s("h2",{attrs:{id:"문제를-해결하기위해-ms-archtechure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문제를-해결하기위해-ms-archtechure"}},[t._v("#")]),t._v(" 문제를 해결하기위해 MS Archtechure")]),t._v(" "),s("ul",[s("li",[t._v("각 서비스를 구분하여 관리의 효율성을 높임")]),t._v(" "),s("li",[t._v("한 곳이 장애나더라도 다른 곳은 멀쩡")]),t._v(" "),s("li",[t._v("서비스간의 의존성이 내려감")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("gRPC for Internal Commnuication")])]),t._v(" "),s("p",[t._v("네트워크의 낭비를 줄이고 효율성을 높이기 위해 gRPC를 도입")]),t._v(" "),s("ul",[s("li",[t._v("JSON 대신 Protobuf라는 데이터형식을 사용")]),t._v(" "),s("li",[t._v("빠른 인코딩, 디코딩")])]),t._v(" "),s("p",[t._v("Protobuf 정의")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("message Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    required string name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    required int32 id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    optional string email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("가져온 데이터에 무엇이 있을지 예측가능(문서가 필요없을 정도!)")])]),t._v(" "),s("li",[s("p",[t._v("Defaultㄹ HTTP2를 사용하고 있음(기본적으로 HTML1.1을 사용)")])]),t._v(" "),s("li",[s("p",[t._v("HTTP2 Multiplexing 한번에 요청, 한번에 응답 받을 수 있음")])])]),t._v(" "),s("h1",{attrs:{id:"http-grpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-grpc"}},[t._v("#")]),t._v(" HTTP & gRPC")]),t._v(" "),s("p",[t._v("HTTP (REST API)")]),t._v(" "),s("ul",[s("li",[t._v("JSON으로 데이터를 주고 받음")]),t._v(" "),s("li",[t._v("서버 스펙을 문서로 전달받거나 , swagger를 작성해서 공유")])]),t._v(" "),s("p",[t._v("gRPC")]),t._v(" "),s("ul",[s("li",[t._v("Protobug 파일 자체가 문서 스펙\n사용하면 protobuf로 정의된 API를 HTTP + JSON으로 제공 가능")])]),t._v(" "),s("h1",{attrs:{id:"vm-기반-인프라-provisioning에서-container로의"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vm-기반-인프라-provisioning에서-container로의"}},[t._v("#")]),t._v(" VM 기반 인프라 provisioning에서 Container로의")]),t._v(" "),s("p",[t._v("가상머신과 컨테이너의 차이")]),t._v(" "),s("ul",[s("li",[t._v("어플리케이션 어러개를 뛰우고싶다면?")])]),t._v(" "),s("h1",{attrs:{id:"쿠버네티스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#쿠버네티스"}},[t._v("#")]),t._v(" 쿠버네티스")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("컨테이너화된 애플리케이션을 자동으로 배포, 스케일링 및 관리해주는 오픈소스 시스템")])]),t._v(" "),s("li",[s("p",[t._v("행성 규모 확장")]),t._v(" "),s("ul",[s("li",[t._v("운영팀의 규모를 늘리지 않고도 확장 가능")])])])]),t._v(" "),s("h1",{attrs:{id:"인프라-운영을-벗어난-serverless의-도입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#인프라-운영을-벗어난-serverless의-도입"}},[t._v("#")]),t._v(" 인프라 운영을 벗어난 Serverless의 도입")]),t._v(" "),s("ol",[s("li",[t._v("serverless = 내가 운영하는 서버가 존재하지 않는다. 클라우드에 내 로직만 올리고 클라우드가 대신 실행")])]),t._v(" "),s("h1",{attrs:{id:"공식문서"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#공식문서"}},[t._v("#")]),t._v(" 공식문서")]),t._v(" "),s("ul",[s("li",[t._v("새로운 기술을 배울 때는 공식사이트를 보고 공식문서를 보자")]),t._v(" "),s("li",[t._v("기술은 바뀌고, 책은 옛것이다")])]),t._v(" "),s("h1",{attrs:{id:"뱅크샐러드-테크스펙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#뱅크샐러드-테크스펙"}},[t._v("#")]),t._v(" 뱅크샐러드 테크스펙")])])}),[],!1,null,null,null);r.default=a.exports}}]);